#!/usr/bin/ruby
# Copyright (C) Thomas Chace 2011-2012 <tchacex@gmail.com>
# This file is part of Post.
# Post is free software: you can redistribute it and/or modify
# it under the terms of the GNU Lesser General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.

# Post is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU Lesser General Public License for more details.

# You should have received a copy of the GNU Lesser General Public License
# along with Post.  If not, see <http://www.gnu.org/licenses/>.

STDOUT.sync = true
PWD = Dir.pwd()

require('rubygems')
require('post')
require('optparse')
require('fileutils')

DATA = PackageDataBase.new()

if file_exists(DATA.get_channel['url'] + '/info.tar')
    puts('Loading:     Downloading package information.')
    DATA.update_database()
end

def confirmation(queue)
    return false if queue.empty?
    puts("Queue:       #{queue.to_a.join(" ")}")
    print('Confirm:     [y/n] ')
    return true if gets.include?('y')
end

def install_local_packages(args)
    install = Fetch.new()
    #FileUtils.rm_r("/tmp/post") if (File.exists?("/tmp/post"))
    #FileUtils.mkdir_p('/tmp/post')
    args.each do |package|
        path = File.join(File.expand_path(PWD), package)
        puts path
        FileUtils.cp(path, "/tmp/post/#{File.basename(path)}")
    end
    if confirmation(args)
        
        args.each { |package| install.do_install(File.basename(package)) }
    end
end

def install_packages(args)
    queue = PackageList.new()    
    fetch = Fetch.new()

    begin
        args.each { |package| queue.push(package) }
        if confirmation(queue)
            queue.each do |package|
                fetch.fetch_package(package)
                puts("Installing:  #{package}")
                fetch.install_package(package)
            end
        end
    rescue MismatchedHash => error
        puts(error.message)
    rescue ConflictingEntry => error
        puts(error.message)
    end
end

def remove_packages(args)
    queue = PackageList.new()
    args.each do |package|
        queue.set(package) if DATA.installed?(package)
    end
    erase = Erase.new()
    if confirmation(queue)
        queue.each { |package| puts("Removing:    #{package}") }
        queue.each { |package| erase.remove_package(package) }
    end
end

options = ARGV.options()
options.set_summary_indent('    ')
options.banner =    "Usage: post [OPTIONS] [PACKAGES]"
options.version =   "Post 1.7 (1.7.0)"
options.define_head "Copyright (C) Thomas Chace 2011-2012 <tchacex@gmail.com>"

options.on('-i', '--fetch=', Array,
    'Install a package.')  { |args| install_packages(args) }
options.on('-l', '--install=', Array,
    'Install a local package.')  { |args| install_local_packages(args) }
options.on('-r', '--erase=', Array,
    'Erase a package.') { |args| remove_packages(args) }
options.on('-u', '--upgrade',
    'Upgrade packages to latest versions') {
        packages = DATA.get_installed_packages()
        install_packages(packages)
    }

options.on('-h', '--help', 'Show this help message.') { puts(options) }
options.on('-v', '--version', 'Show version information.') { puts( options.version() ) }
options.parse!
